var t=new class{parentElement=document.querySelector("#app");formElement;render(t=[]){const e=this.getHtml(t);this.parentElement.innerHTML="",this.parentElement.insertAdjacentHTML("afterbegin",e),this.formElement=this.parentElement.querySelector(".product-container")}addHandlerRender(t){t()}addHandlerProduct(t){this.parentElement.addEventListener("submit",(e=>{e.preventDefault();const n=[...new FormData(this.formElement)],r=Object.fromEntries(n);t(r)}))}getHtml(t){return`\n    <h3>상품 추가하기</h3>\n    <form class="product-container">\n        <input type="text" id="product-name-input" name="name" placeholder="상품명" required />\n        <input type="number" id="product-price-input" name="price" placeholder="가격" required />\n        <input type="number" id="product-quantity-input" name="quantity" placeholder="수량" required />\n        <button id="product-add-button">추가하기</button>\n    </form>\n    <table class="product-inventory">\n        <colgroup>\n            <col style="width: 140px" />\n            <col style="width: 100px" />\n            <col style="width: 100px" />\n        </colgroup>\n        <thead>\n            <tr>\n                <th>상품명</th>\n                <th>가격</th>\n                <th>수량</th>\n            </tr>\n            ${t.map((t=>`\n            <tr>\n                <th>${t.name}</th>\n                <th>${t.price}</th>\n                <th>${t.quantity}</th>\n            </tr>`)).join("")}\n        </thead>\n        <tbody id="product-inventory-container"></tbody>\n    </table>\n`}};const e=Object.freeze({MIN_PRICE:100,MIN_QUANTITY:1,SHOULD_BE_DIVIDED:10}),n=Object.freeze({LESS_THAN_MIN_PRICE:"상품 가격은 최소 100원 이상이어야 합니다!",NOT_DIVIDED_PRICE:"상품 가격은 10원 단위로 나누어 떨어져야합니다!",LESS_THAN_MIN_QUANTITY:"상품 가격은 10원 단위로 나누어 떨어져야합니다!"});class r extends Error{constructor(t){super(t)}}var o;!function(t){t.ProductManagement="productContainerView"}(o||(o={}));const c={currentView:o.ProductManagement,products:[]},i=function(){const t=localStorage.getItem("products");return t&&(c.products=JSON.parse(t)),c.products};i();const a=function(o){try{const i=function(t){if(t.price<e.MIN_PRICE)throw new r(n.LESS_THAN_MIN_PRICE);if(t.quantity<e.MIN_QUANTITY)throw new r(n.LESS_THAN_MIN_QUANTITY);if(t.price%e.SHOULD_BE_DIVIDED!=0)throw new r(n.NOT_DIVIDED_PRICE);const o=c.products.filter((e=>e.name!==t.name));return c.products=[...o,t],c.products.sort((function(t,e){if(t.name<e.name)return 1;if(t.name>e.name)return-1;if(t.name===e.name){if(t.price<e.price)return 1;if(t.price>e.price)return 1;if(t.price===e.price)return t.quantity<e.quantity?-1:t.quantity>e.quantity?1:0}throw new Error("정렬 할 수 없습니다.")})),localStorage.setItem("products",JSON.stringify(c.products)),c.products}(o);t.render(i)}catch(t){t instanceof r&&alert(t.message),console.log(t)}},u=function(){const e=i();t.render(e)};t.addHandlerRender(u),t.addHandlerProduct(a),function(t){if(t!==o.ProductManagement)throw Error("존재하지 않는 page view 입니다.");u()}(o.ProductManagement);
//# sourceMappingURL=index.b7514986.js.map
